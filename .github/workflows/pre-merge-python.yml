# SPDX-FileCopyrightText: Copyright (c) 2024-2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: NVIDIA Test Github Validation

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  build-test:
    runs-on:
        group: Fastchecker
    strategy:
      matrix:
        framework:
          - vllm
    name: Build and Test - ${{ matrix.framework }}
    env:
      CONTAINER_ID: test_${{ github.run_id }}_${{ github.run_attempt }}_${{ github.job }}_${{ matrix.framework }}
      PYTEST_XML_FILE: pytest_test_report.xml
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Define Image Tag
        id: define_image_tag
        run: |
          echo "image_tag=dynamo:latest-${{ matrix.framework }}" >> $GITHUB_OUTPUT
      - name: Build image
        env:
          GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}
        run: |
          ./container/build.sh --tag ${{ steps.define_image_tag.outputs.image_tag }} --target ci_minimum --framework ${{ matrix.framework }}
      - name: Copy Python wheels from test Container
        run: |
          mkdir wheels
          docker run -w /workspace  --name wheel_copy -d ${{ steps.define_image_tag.outputs.image_tag }} tail -f /dev/null
          docker exec wheel_copy bash -c 'ls dist/*.whl' | while read line; do docker cp wheel_copy:/workspace/$line ./wheels; done
          docker container stop wheel_copy
          ls -al wheels
      - name: Archive ai_dynamo Wheel
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: wheel-ai_dynamo
          if-no-files-found: error
          path: ./wheels/ai_dynamo-*.whl
      - name: Archive ai_dynamo_runtime Wheel
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: wheel-ai_dynamo_runtime
          if-no-files-found: error
          path: ./wheels/ai_dynamo_runtime-*.whl
      - name: Archive ai_dynamo_vllm Wheel
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: wheel-ai_dynamo_vllm
          if-no-files-found: error
          path: ./wheels/ai_dynamo_vllm-*.whl
      - name: Run pytest
        env:
          PYTEST_MARKS: "pre_merge or mypy"
        run: |
          docker run -w /workspace --name ${{ env.CONTAINER_ID }} ${{ steps.define_image_tag.outputs.image_tag }} pytest --basetemp=/tmp --junitxml=${{ env.PYTEST_XML_FILE }} -m "${{ env.PYTEST_MARKS }}"
      - name: Copy test report from test Container
        if: always()
        run: |
          docker cp ${{ env.CONTAINER_ID }}:/workspace/${{ env.PYTEST_XML_FILE }} .
      - name: Archive test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.framework }}-python-test-results
          if-no-files-found: error
          path: |
            ${{ env.PYTEST_XML_FILE }}
